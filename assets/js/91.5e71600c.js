(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{416:function(s,e,a){"use strict";a.r(e);var t=a(4),_=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("1、先搜索target_link_libraries然后在 cjson 后面加上dl")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699239042629.webp",alt:"1699239042629"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699238999430.webp",alt:"1699238999430"}})]),s._v(" "),e("p",[s._v("2、记得在CMakeLists.txt文件中添加")]),s._v(" "),e("p",[e("code",[s._v("set(CMAKE_CXX_STANDARD 11)")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699239105937.webp",alt:"1699239105937"}})]),s._v(" "),e("p",[s._v("3、Ninja下载")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699239253988.webp",alt:"1699239253988"}})]),s._v(" "),e("p",[s._v('你遇到的问题与CMake项目的配置有关。CMake 无法找到与 "Ninja" 对应的构建程序，同时还提示C和Cpp编译器未设置。通常可以通过以下步骤解决这些问题：')]),s._v(" "),e("ol",[e("li",[e("p",[e("strong",[s._v("安装 Ninja")]),s._v("：\n如果你想使用 Ninja 作为构建工具，你需要确保它已安装在你的系统上。Ninja 是一种构建工具，通常比 Make 更快。你可以使用系统的软件包管理器来安装它。例如，在 Debian/Ubuntu 上，你可以运行以下命令：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sudo apt-get install ninja-build\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在其他系统上，你可能需要使用不同的软件包管理器或手动下载 Ninja。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("设置C和Cpp编译器")]),s._v("：\nCMake 需要知道要使用哪个C和Cpp编译器。你可以在运行CMake时通过设置 "),e("code",[s._v("CMAKE_C_COMPILER")]),s._v(" 和 "),e("code",[s._v("CMAKE_CXX_COMPILER")]),s._v(" 变量来指定这些编译器。例如，如果你想使用GCC作为编译器，可以执行以下命令：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("cmake "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DCMAKE_C_COMPILER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gcc "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DCMAKE_CXX_COMPILER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("g++ /你的源代码路径\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v('请将 "gcc" 和 "g++" 替换为你的系统上适当的编译器命令。')])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("生成构建系统")]),s._v("：\n在设置编译器和任何其他必要选项后，你可以生成构建系统。确保指定要使用的生成器（在这种情况下是Ninja）：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("cmake "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--build")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-G")]),s._v(" Ninja\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v('将 "." 替换为你的CMake项目目录的路径。这个命令将生成Ninja构建文件并启动构建过程。')])])]),s._v(" "),e("p",[s._v('如果你不想使用Ninja作为构建系统，你可以在命令中使用不同的生成器，常见的替代选项包括 "Make" 或不指定生成器（CMake将使用系统的默认生成器）。')]),s._v(" "),e("p",[s._v("一旦你解决了这些问题，CMake应该能够成功配置你的项目并生成构建系统。")]),s._v(" "),e("p",[s._v("4、dlsym的bug问题")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699239313255.webp",alt:"1699239313255"}})]),s._v(" "),e("p",[s._v("你的错误消息表明在运行 "),e("code",[s._v("cat test_white_list.txt")]),s._v(" 时出现了符号查找错误。这通常发生在共享库（"),e("code",[s._v("libhook.so")]),s._v("）中引用了一个未定义的符号。")]),s._v(" "),e("p",[s._v("在这种情况下，可能发生以下情况：")]),s._v(" "),e("ol",[e("li",[e("p",[e("strong",[s._v("共享库问题")]),s._v("："),e("code",[s._v("libhook.so")]),s._v(" 可能依赖于其他共享库，而这些库没有正确链接或者版本不匹配。你可以使用以下命令查看 "),e("code",[s._v("libhook.so")]),s._v(" 的依赖关系：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ldd libhook.so\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("确保所有依赖项都可以正确找到，并且版本匹配。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("库加载顺序")]),s._v("：在运行 "),e("code",[s._v("cat")]),s._v(" 时，动态链接器加载共享库。可能 "),e("code",[s._v("libhook.so")]),s._v(" 被加载，但它依赖的符号在加载时找不到。你可以尝试设置 "),e("code",[s._v("LD_PRELOAD")]),s._v(" 环境变量来确保 "),e("code",[s._v("libhook.so")]),s._v(" 在其他库之前加载：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("LD_PRELOAD=/path/to/libhook.so cat test_white_list.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("CMake 链接问题")]),s._v("：检查你的 CMake 构建脚本是否正确配置了链接依赖项，特别是 "),e("code",[s._v("dlsym")]),s._v(" 这个符号是否正确链接到 "),e("code",[s._v("libdl")]),s._v(" 库。确保你的 "),e("code",[s._v("CMakeLists.txt")]),s._v(" 文件中有类似以下的行：")]),s._v(" "),e("div",{staticClass:"language-cmake line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cmake"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("your_target_name dl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这将确保 "),e("code",[s._v("libdl")]),s._v(" 库正确链接到你的项目中。")])])]),s._v(" "),e("p",[s._v("如果以上方法仍无法解决问题，你可能需要进一步检查共享库的依赖关系和构建过程，以确保所有库正确链接，并且符号都能够正确解析。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xiaose-code/Pictures@main/img/1699239389830.webp",alt:"1699239389830"}})]),s._v(" "),e("p",[s._v("根据你提供的 "),e("code",[s._v("libcjson.so.1")]),s._v(" 的依赖信息，它似乎没有显式依赖于 "),e("code",[s._v("libdl")]),s._v(" 库，因为 "),e("code",[s._v("libdl")]),s._v(" 没有在依赖列表中。")]),s._v(" "),e("p",[s._v("问题可能出在 "),e("code",[s._v("libhook.so")]),s._v(" 中，它依赖于 "),e("code",[s._v("cjson")]),s._v(" 并可能间接依赖于 "),e("code",[s._v("libdl")]),s._v("，但却未正确链接到 "),e("code",[s._v("libdl")]),s._v("。")]),s._v(" "),e("p",[s._v("你可以尝试在 "),e("code",[s._v("libhook.so")]),s._v(" 的构建过程中显式链接到 "),e("code",[s._v("libdl")]),s._v("，以确保 "),e("code",[s._v("dlsym")]),s._v(" 等符号能够正确解析。在你的 CMakeLists.txt 文件中添加以下行：")]),s._v(" "),e("div",{staticClass:"language-cmake line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cmake"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("target_link_libraries")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("CMAKE_PROJECT_NAME")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("PRIVATE")]),s._v(" cjson dl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这将确保在构建 "),e("code",[s._v("libhook.so")]),s._v(" 时，它会正确链接到 "),e("code",[s._v("libdl")]),s._v("。")]),s._v(" "),e("p",[s._v("重新构建 "),e("code",[s._v("libhook.so")]),s._v(" 后，再次运行你的测试命令 "),e("code",[s._v("cat test_white_list.txt")]),s._v("，看看是否问题得到解决。如果问题仍然存在，请确保 "),e("code",[s._v("libhook.so")]),s._v(" 的链接设置和运行时环境都正确。")])])}),[],!1,null,null,null);e.default=_.exports}}]);